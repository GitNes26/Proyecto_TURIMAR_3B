
-- --------------------------------------------------------------------------------
-- BASE DE DATOS TURIVIAJES - FASE 1 - TOURS
-- --------------------------------------------------------------------------------
CREATE DATABASE TURI_FINAL;
USE TURI_FINAL;

-- --------------------------------------------------------------------------------
-- CIUDADES
-- --------------------------------------------------------------------------------
CREATE TABLE PAISES(
ID INT AUTO_INCREMENT PRIMARY KEY,
PAIS VARCHAR(200)
);

CREATE TABLE ESTADOS(
ID INT AUTO_INCREMENT PRIMARY KEY,
ESTADO VARCHAR(200),
PAIS INT,
CONSTRAINT FK_PAIS_E FOREIGN KEY(PAIS) REFERENCES PAISES(ID)
);

CREATE TABLE CIUDADES(
ID INT AUTO_INCREMENT PRIMARY KEY,
CIUDAD VARCHAR(200),
ESTADO INT,
CONSTRAINT FK_ESTADO_C FOREIGN KEY(ESTADO) REFERENCES ESTADOS(ID)
);
-- --------------------------------------------------------------------------------


-- --------------------------------------------------------------------------------
-- USUARIOS
-- --------------------------------------------------------------------------------
CREATE TABLE ROLES(
ID INT PRIMARY KEY,									
ROL VARCHAR(100), 									
DESCRIPCION TEXT 									
);

CREATE TABLE USUARIOS(
ID INT AUTO_INCREMENT PRIMARY KEY,
CORREO VARCHAR(100) NOT NULL,
USUARIO VARCHAR(50) NOT NULL,
CONTRASEÑA VARCHAR(500) NOT NULL,
ROL INT DEFAULT '0', -- ROL 0 SIGNIFICA QUE ES UN USUARIO NORMAL.
CONSTRAINT FK_CODIGO_U FOREIGN KEY(ROL) REFERENCES ROLES(ID)
);

CREATE TABLE PERSONAS(
ID INT AUTO_INCREMENT PRIMARY KEY,
USUARIO INT,
NOMBRE VARCHAR(100) NOT NULL,
APELLIDO_PATERNO VARCHAR(100) NOT NULL,
APELLIDO_MATERNO VARCHAR(100),
SEXO ENUM('MASCULINO','FEMENINO'),
CELULAR CHAR(10),
FECHA_NACIMIENTO DATE,
CALLE VARCHAR(100),
NO_EXT INT,
COLONIA VARCHAR(100),
CIUDAD VARCHAR(100),
PAIS INT,
FOTO VARCHAR(100),
CONSTRAINT FK_USUARIO_P FOREIGN KEY(USUARIO) REFERENCES USUARIOS(ID),
CONSTRAINT FK_PAIS_P FOREIGN KEY(PAIS) REFERENCES PAISES(ID)
);
-- --------------------------------------------------------------------------------
 ALTER TABLE USUARIOS ADD UNIQUE(USUARIO);
 
  -- --------------------------------------------------------------------------------
 -- TOURS
 -- --------------------------------------------------------------------------------
 CREATE TABLE TOURS(
 ID INT AUTO_INCREMENT PRIMARY KEY,
 TOUR VARCHAR(200),
 DESCRIPCION TEXT,
 DURACION VARCHAR(20),
 CAPACIDAD INT, -- MAXIMO DE PERSONAS EN EL TOUR
 PRECIO DECIMAL(10,2)
 );
 
 CREATE TABLE DESTINO_TOUR(
 TOUR INT,
 DESTINO INT,
 CONSTRAINT FK_TOUR_DT FOREIGN KEY(TOUR) REFERENCES TOURS(ID),
 CONSTRAINT FK_DESTINO_DT FOREIGN KEY(DESTINO) REFERENCES CIUDADES(ID)
 );
 
 CREATE TABLE COTIZACION_TOUR(
 ID INT AUTO_INCREMENT PRIMARY KEY,
 USUARIO INT,
 TOUR INT,
 PAIS INT,
 ESTADO INT,
 CIUDAD INT,
 FECHA_RESERVA DATE,
 FECHA_SALIDA DATE, -- FECHAS DISPONIBLES SEGUN LA DURACIÓN DEL TOUR PARA QUE NO SE EMPALMEN LAS FECHAS
 ADULTOS INT, -- CONDICIONAREMOS EL MAXIMO DE PERSONAS A LLEVAR
 MENORES INT, -- SEGUN LA SUMA DE ESTOS DOS Y LOS LUGARES RESTANTES
 CATEGORIA_HOTELES ENUM('2','3','4'), -- CADA TOUR TIENE HOTELES ESTABLECIDOS POR CATEGORIA
 HOTEL INT,
 AEROPUERTO INT,
 AEROLINEA INT,
 COMENTARIOS TEXT,
 CONSTRAINT FK_TOUR_CT FOREIGN KEY(TOUR) REFERENCES TOURS(ID),
 CONSTRAINT FK_PAIS_CT FOREIGN KEY(PAIS) REFERENCES PAISES(ID),
 CONSTRAINT FK_ESTADO_CT FOREIGN KEY(ESTADO) REFERENCES ESTADOS(ID),
 CONSTRAINT FK_CIUDAD_CT FOREIGN KEY(CIUDAD) REFERENCES CIUDADES(ID),
 CONSTRAINT FK_USUARIO_CT FOREIGN KEY(USUARIO) REFERENCES USUARIOS(ID),
 CONSTRAINT FK_HOTEL_CT FOREIGN KEY(HOTEL) REFERENCES HOTELES(ID),
 CONSTRAINT FK_AEROPUERTO_CT FOREIGN KEY(AEROPUERTO) REFERENCES AEROPUERTOS(ID),
 CONSTRAINT FK_AEROLINEA_CT FOREIGN KEY(AEROLINEA) REFERENCES AEROLINEAS(ID)
 ); 
 
 
 -- --------------------------------------------------------------------------------
 -- AEROPUERTOS Y AEROLINEAS
 -- --------------------------------------------------------------------------------
 CREATE TABLE AEROPUERTOS(
 ID INT AUTO_INCREMENT PRIMARY KEY,
 CIUDAD INT,
 AEROPUERTO VARCHAR(200),
 CONSTRAINT FK_CIUDAD_AP FOREIGN KEY(CIUDAD) REFERENCES CIUDADES(ID)
 );
 
 CREATE TABLE AEROLINEAS(
 ID INT AUTO_INCREMENT PRIMARY KEY,
 AEROLINEA VARCHAR(200)
 );
 
 CREATE TABLE AEROPUERTO_AEROLINEA(
 AEROPUERTO INT,
 AEROLINEA INT,
 HORARIO TIME,
 CONSTRAINT FK_AEROPUERTO_AA FOREIGN KEY(AEROPUERTO) REFERENCES AEROPUERTOS(ID),
 CONSTRAINT FK_AEROLINEA_AA FOREIGN KEY(AEROLINEA) REFERENCES AEROLINEAS(ID)
 );
 
 CREATE TABLE TARIFA_VUELO(
 ID INT AUTO_INCREMENT PRIMARY KEY,
 AEROPUERTO INT,
 AEROLINEA INT,
 TIPO_VUELO ENUM('ABIERTO','REDONDO'),
 DESTINO INT,
 TARIFA DECIMAL(10,2),
 CONSTRAINT FK_AEROPUERTO_TV FOREIGN KEY(AEROPUERTO) REFERENCES AEROPUERTOS(ID),
 CONSTRAINT FK_AEROLINEA_TV FOREIGN KEY(AEROLINEA) REFERENCES AEROLINEAS(ID),
 CONSTRAINT FK_DESTINO_TV FOREIGN KEY(DESTINO) REFERENCES CIUDADES(ID)
 );
 
 CREATE TABLE AEROLINEA_TOUR(
 AEROLINEA INT,
 TOUR INT,
 CONSTRAINT FK_AEROLINEA_AT FOREIGN KEY(AEROLINEA) REFERENCES AEROLINEAS(ID),
 CONSTRAINT FK_TOUR_AT FOREIGN KEY(TOUR) REFERENCES TOURS(ID)
 );
 -- --------------------------------------------------------------------------------
 
 
 -- --------------------------------------------------------------------------------
 -- HOTELES
 -- --------------------------------------------------------------------------------
 CREATE TABLE HOTELES(
 ID INT AUTO_INCREMENT PRIMARY KEY,
 CIUDAD INT,
 HOTEL TEXT,
 CATEGORIA VARCHAR(20),
 CONSTRAINT FK_CIUDAD_H FOREIGN KEY(CIUDAD) REFERENCES CIUDADES(ID)
 );
 
 CREATE TABLE TARIFA_HOTEL(
 HOTEL INT,
 TIPO_HABITACION ENUM('SENCILLA','DOBLE'),
 PRECIO_NOCHE DECIMAL(10,2),
 CONSTRAINT FK_HOTEL_TF FOREIGN KEY(HOTEL) REFERENCES HOTELES(ID)
 );
 
 CREATE TABLE HOTEL_TOUR(
 HOTEL INT,
 TOUR INT,
 CONSTRAINT FK_HOTEL_HT FOREIGN KEY(HOTEL) REFERENCES HOTELES(ID),
 CONSTRAINT FK_TOUR_HT FOREIGN KEY(TOUR) REFERENCES TOURS(ID)
 );
 -- --------------------------------------------------------------------------------
 
 


 
 CREATE TABLE RESUMEN_TOUR(
 FOLIO INT AUTO_INCREMENT PRIMARY KEY,
 COTIZACION INT, -- ESTE CAMPO ENGLOBA TODO LO DE LA TABLA COTIZACIÓN, LA CUAL YA TIENE RELACIÓN CON TOURS, HOTELES Y VUELOS.
 PRECIO_TOTAL DECIMAL(10,2),
 ESTADO ENUM('EN PROCESO','CANCELADO','APROBADO') DEFAULT 'EN PROCESO',
 CONSTRAINT FK_COTIZACION_I FOREIGN KEY(COTIZACION) REFERENCES COTIZACION_TOUR(ID)
 );
-- --------------------------------------------------------------------------------


-- --------------------------------------------------------------------------------
-- INFO EXTRA DE LOS TOURS
-- --------------------------------------------------------------------------------
CREATE TABLE TOUR_INCLUYE(
TOUR INT,
INCLUYE TEXT,
SERVICIOS_OPCIONALES TEXT,
CONSTRAINT FK_TOUR_IN FOREIGN KEY(TOUR) REFERENCES TOURS(ID)
);

CREATE TABLE TOUR_NO_INCLUYE(
TOUR INT,
NO_INCLUYE TEXT,
CONSTRAINT FK_TOUR_NI FOREIGN KEY(TOUR) REFERENCES TOURS(ID)
);

CREATE TABLE NOTAS(
TOUR INT,
NOTAS TEXT,
CONSTRAINT FK_TOUR_N FOREIGN KEY(TOUR) REFERENCES TOURS(ID)
);
-- --------------------------------------------------------------------------------


-- --------------------------------------------------------------------------------
-- GUIAS
-- --------------------------------------------------------------------------------
CREATE TABLE GUIAS(
ID INT PRIMARY KEY,
NOMBRE VARCHAR(200),
APELLIDOS VARCHAR(200),
CORREO VARCHAR(100),
CELULAR CHAR(10),
CIUDAD INT,
FOTO VARCHAR(100),
CONSTRAINT FK_CIUDAD_G FOREIGN KEY(CIUDAD) REFERENCES CIUDADES(ID)
);

CREATE TABLE GUIA_TOUR(
GUIA INT,
TOUR INT,
CONSTRAINT FK_GUIA_GT FOREIGN KEY(GUIA) REFERENCES GUIAS(ID),
CONSTRAINT FK_TOUR_GT FOREIGN KEY(TOUR) REFERENCES TOURS(ID)
);
-- --------------------------------------------------------------------------------


-- --------------------------------------------------------------------------------
-- FORMAS DE PAGO
-- --------------------------------------------------------------------------------
CREATE TABLE FORMAS_PAGO(
ID INT AUTO_INCREMENT PRIMARY KEY,
TIPO_PAGO VARCHAR(200),
DESCRIPCION TEXT
);

CREATE TABLE BANCOS(
ID INT AUTO_INCREMENT PRIMARY KEY,
BANCO VARCHAR(200),
CLAVE VARCHAR(100),
CUENTA VARCHAR(100)
);

CREATE TABLE DETALLES_PAGO(
FORMA_PAGO INT,
BANCO INT,
CONSTRAINT FK_FORMA_PAGO_DP FOREIGN KEY(FORMA_PAGO) REFERENCES FORMAS_PAGO(ID),
CONSTRAINT FK_BANCO_DP FOREIGN KEY(BANCO) REFERENCES BANCOS(ID)
);
-- --------------------------------------------------------------------------------


-- --------------------------------------------------------------------------------
-- HISTORIALES DE LOS TOURS ADQUIRIDOS POR LOS USUARIOS
-- --------------------------------------------------------------------------------
CREATE TABLE TOURS_ADQUIRIDOS(
ID INT AUTO_INCREMENT PRIMARY KEY,
USUARIO INT,
TOUR INT,
FECHA_RESERVA DATE,
FECHA_SALIDA DATE,
ADULTOS INT,
MENORES INT,
CATEGORIA_HOTEL ENUM('2','3','4'),
HOTEL INT,
AEROPUERTO INT,
AEROLINEA INT,
CONSTRAINT FK_USUARIO_UA FOREIGN KEY(USUARIO) REFERENCES USUARIOS(ID),
CONSTRAINT FK_TOUR_TA FOREIGN KEY(TOUR) REFERENCES TOURS(ID),
CONSTRAINT FK_HOTEL_TA FOREIGN KEY(HOTEL) REFERENCES HOTELES(ID),
CONSTRAINT FK_AEROPUERTO_TA FOREIGN KEY(AEROPUERTO) REFERENCES AEROPUERTOS(ID),
CONSTRAINT FK_AEROLINEA_TA FOREIGN KEY(AEROLINEA) REFERENCES AEROLINEAS(ID)
);
-- --------------------------------------------------------------------------------


-- --------------------------------------------------------------------------------
-- TOURS GUARDADOS/SEGUIDOS POR USUARIO
-- --------------------------------------------------------------------------------
CREATE TABLE TOURS_GUARDADOS(
USUARIO INT,
TOUR INT,
CONSTRAINT FK_USUARIO_UG FOREIGN KEY(USUARIO) REFERENCES USUARIOS(ID),
CONSTRAINT FK_TOUR_TG FOREIGN KEY(TOUR) REFERENCES TOURS(ID)
);
-- --------------------------------------------------------------------------------


-- --------------------------------------------------------------------------------
-- TOURS FAVORITOS POR USUARIO
-- --------------------------------------------------------------------------------
CREATE TABLE TOURS_FAVORITOS(
USUARIO INT,
TOUR INT,
CONSTRAINT FK_USUARIO_UF FOREIGN KEY(USUARIO) REFERENCES USUARIOS(ID),
CONSTRAINT FK_TOUR_TF FOREIGN KEY(TOUR) REFERENCES TOURS(ID)
);